{
    "pipes": [],
    "interfaces": [
        {
            "name": "LoginData",
            "id": "interface-LoginData-3398de5cf14eff7fd6f5194df2206025",
            "file": "src/app/pages/login/login.component.ts",
            "type": "interface",
            "sourceCode": "import { Component, } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { apiRoutes, API_BASE_URL } from 'src/app/constants/api.enum';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\nexport interface LoginData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent {\r\n\r\n  error: string | null = null;\r\n  email = '';\r\n  password = '';\r\n  passwordVisible = false;\r\n  response: any;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  submit(): string | null {\r\n    this.error = this.validation();\r\n\r\n    if(typeof this.error === 'string') {\r\n      return null;\r\n    }\r\n\r\n    // const headers = new HttpHeaders().set('Authorization', 'auth-token');\r\n    const data: LoginData = {\r\n      email: this.email,\r\n      password: this.password\r\n    };\r\n\r\n    // const promise = this.http.post(API_BASE_URL + apiRoutes['sanctum-crsf'], data).toPromise();\r\n    // promise.then((data) => {\r\n    //   console.log(data);\r\n    // }).catch((err) => console.error(err));\r\n    // console.log(this.response);\r\n\r\n    const promise = this.http.post(API_BASE_URL + apiRoutes.login, data).toPromise();\r\n    promise.then((data) => {\r\n      console.log(data);\r\n    }).catch((err) => console.error(err));\r\n    console.log(this.response);\r\n    return '';\r\n  }\r\n\r\n  validation(): string | null {\r\n    if (!this.email.includes('@') || !this.email.includes('.')) { // Check email\r\n      return 'Email is not valid';\r\n    }\r\n\r\n    if (this.email.length <= 4) { // Check password\r\n      return 'Email requires minimal 6 characters';\r\n    }\r\n\r\n    if (this.password.length <= 6) { // Check password\r\n      return 'Password requires minimal 6 characters';\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n}\r\n",
            "properties": [
                {
                    "name": "email",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "password",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 150,
            "methods": []
        }
    ],
    "injectables": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-e3ea1f4631d62652a5623d3ab757b2fc",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\r\n\r\nexport class AppPage {\r\n  async navigateTo(): Promise<unknown> {\r\n    return browser.get(browser.baseUrl);\r\n  }\r\n\r\n  async getTitleText(): Promise<string> {\r\n    return element(by.css('app-root .content span')).getText();\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-0ae57f66be32f7b544889e0ee358c060",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "displayStatic",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "checkDisplayStatic",
                    "args": [
                        {
                            "name": "url",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { Event, NavigationEnd, NavigationError, NavigationStart, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n\r\n  loading = false;\r\n  displayStatic = true;\r\n\r\n  constructor(private router: Router) {\r\n    this.router.events.subscribe((event: Event) => {\r\n      if (event instanceof NavigationStart) {\r\n        // Show loading indicator\r\n        this.loading = true;\r\n      }\r\n\r\n      if (event instanceof NavigationEnd) {\r\n        // Hide loading indicator\r\n        this.checkDisplayStatic(event.urlAfterRedirects);\r\n        this.loading = false;\r\n      }\r\n\r\n      if (event instanceof NavigationError) {\r\n        // Hide loading indicator\r\n        this.loading = false;\r\n        this.checkDisplayStatic(event.url);\r\n        // Present error to user\r\n        console.log(event.error);\r\n      }\r\n    });\r\n  }\r\n\r\n  checkDisplayStatic(url: string): void {\r\n    if (url.includes('/app')) {\r\n      this.displayStatic = false;\r\n    } else {\r\n      this.displayStatic = true;\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router"
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<app-static-navigation *ngIf=\"displayStatic\"></app-static-navigation>\r\n<router-outlet></router-outlet>\r\n<app-static-footer *ngIf=\"displayStatic\"></app-static-footer>\r\n<div *ngIf=\"loading\" class=\"loader position-fixed top-0 left-0 vw-100 vh-100 d-flex justify-content-center align-items-center\">\r\n    <lottie-player src=\"https://assets4.lottiefiles.com/packages/lf20_Yiahbq.json\" class=\"w-12\" background=\"rgba(255, 255, 255, 0)\" speed=\"1\" loop autoplay></lottie-player>\r\n</div>\r\n"
        },
        {
            "name": "AppLayoutComponent",
            "id": "component-AppLayoutComponent-9fb229e4be5e1065fa3983b8f16c7a2c",
            "file": "src/app/pages/app/layout/app-layout.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-layout",
            "styleUrls": [
                "./app-layout.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app-layout.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './app-layout.component.html',\r\n  styleUrls: ['./app-layout.component.scss']\r\n})\r\nexport class AppLayoutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app-layout.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-side-nav>\r\n    <div class=\"pb-4\">\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</app-side-nav>\r\n"
        },
        {
            "name": "BaseCardComponent",
            "id": "component-BaseCardComponent-2bc9fea33f39b99b22547d0fae823d54",
            "file": "src/app/components/app/cards/base-card/base-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-base-card",
            "styleUrls": [
                "./base-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./base-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "line": 10
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-base-card',\r\n  templateUrl: './base-card.component.html',\r\n  styleUrls: ['./base-card.component.scss']\r\n})\r\nexport class BaseCardComponent {\r\n\r\n  @Input() class = '';\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./base-card.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div [class]=\"'br-3 br-md-4 bg-white p-3 p-md-4 sh-title position-relative ' + class\">\r\n    <ng-content></ng-content>\r\n</div>"
        },
        {
            "name": "BirthdayCardComponent",
            "id": "component-BirthdayCardComponent-72ed9fa5772956b7d1f6f63a9f755d4a",
            "file": "src/app/components/app/cards/birthday-card/birthday-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-birthday-card",
            "styleUrls": [
                "./birthday-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./birthday-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-birthday-card',\r\n  templateUrl: './birthday-card.component.html',\r\n  styleUrls: ['./birthday-card.component.scss']\r\n})\r\nexport class BirthdayCardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./birthday-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>\r\n  birthday-card works!\r\n</p>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-44f2f1e1b3a1e0ebc1e0edafd90d05c0",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 40
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport default class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CustomInputComponent",
            "id": "component-CustomInputComponent-cac0c27aa0d1620e8cc1940c0b8f2da7",
            "file": "src/app/components/shared/forms/input/custom-input/custom-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-custom-input",
            "styleUrls": [
                "./custom-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./custom-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "line": 17
                },
                {
                    "name": "defaultInputValue",
                    "defaultValue": "''",
                    "line": 15
                },
                {
                    "name": "icon",
                    "defaultValue": "'user'",
                    "line": 11
                },
                {
                    "name": "inputType",
                    "defaultValue": "'text'",
                    "line": 13
                },
                {
                    "name": "name",
                    "defaultValue": "''",
                    "line": 14
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'placeholder'",
                    "line": 16
                },
                {
                    "name": "subtitle",
                    "defaultValue": "'subtitle'",
                    "line": 12
                }
            ],
            "outputsClass": [
                {
                    "name": "changeValueEvent",
                    "defaultValue": "new EventEmitter<string>()",
                    "line": 19,
                    "type": "EventEmitter"
                },
                {
                    "name": "iconClickEvent",
                    "defaultValue": "new EventEmitter<string>()",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "input",
                    "defaultValue": "new FormControl(this.defaultInputValue)",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "checkIconType",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 28
                },
                {
                    "name": "iconClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32
                },
                {
                    "name": "returnInputValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-custom-input',\r\n  templateUrl: './custom-input.component.html',\r\n  styleUrls: ['./custom-input.component.scss']\r\n})\r\nexport class CustomInputComponent {\r\n\r\n  @Input() icon = 'user';\r\n  @Input() subtitle = 'subtitle';\r\n  @Input() inputType = 'text';\r\n  @Input() name = '';\r\n  @Input() defaultInputValue = '';\r\n  @Input() placeholder = 'placeholder';\r\n  @Input() class = '';\r\n\r\n  @Output() changeValueEvent = new EventEmitter<string>();\r\n  @Output() iconClickEvent = new EventEmitter<string>();\r\n\r\n  input = new FormControl(this.defaultInputValue);\r\n\r\n  returnInputValue(value: string): void {\r\n    this.changeValueEvent.emit(value);\r\n  }\r\n\r\n  checkIconType(): boolean {\r\n    return this.icon.includes('bi ');\r\n  }\r\n\r\n  iconClick(): void {\r\n    this.iconClickEvent.emit();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".custom-input {\r\n  border: 0.25rem solid var(--bs-placeholder);\r\n\r\n  &:focus-within {\r\n    transition: all 0.3s ease;\r\n    border: 0.25rem solid var(--bs-purple) !important;\r\n  \r\n    i:first-child {\r\n      transition: all 0.3s ease;\r\n      color: var(--bs-title) !important;\r\n    }\r\n  }\r\n\r\n  i:first-child {\r\n    font-size: 2rem;\r\n    color: var(--bs-placeholder);\r\n  }\r\n  \r\n  &-subtitle {\r\n    font-size: 0.8rem;\r\n  }\r\n\r\n  input {\r\n    outline: 0;\r\n  }\r\n\r\n  .delete {\r\n    transition: all 0.3s ease;\r\n    font-size: 2.5rem;\r\n    color: var(--bs-placeholder);\r\n\r\n    &:hover {\r\n      color: var(--bs-title);\r\n    }\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./custom-input.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"custom-input d-flex justify-content-between align-items-center p-3 br-4 w-100 {{ class }}\">\r\n    <div\r\n        class=\"d-flex align-items-center\"\r\n        role=\"button\"\r\n    >\r\n        <i\r\n            *ngIf=\"!checkIconType()\"\r\n            (click)=\"iconClick()\"\r\n            nz-icon\r\n            class=\"m-2\"\r\n            [nzType]=\"icon\"\r\n            nzTheme=\"outline\"\r\n            [attr.for]=\"name\"\r\n        ></i>\r\n        <i\r\n            *ngIf=\"checkIconType()\"\r\n            (click)=\"iconClick()\"\r\n            class=\"m-2 {{icon}}\"\r\n        ></i>\r\n        <div class=\"d-flex flex-column ms-2\">\r\n            <label\r\n                [for]=\"name\"\r\n                class=\"text-label custom-input-subtitle fw-6 text-uppercase {{inputField.value.length > 0 ? 'pr-2' : 'pr-5'}}\"\r\n            >\r\n                {{ subtitle }}\r\n            </label>\r\n            <input\r\n                [id]=\"name\"\r\n                class=\"border-0 shadow-none p-0 text-title\"\r\n                [type]=\"inputType\"\r\n                [formControl]=\"input\"\r\n                #inputField\r\n                (ngModelChange)=\"returnInputValue(inputField.value)\"\r\n                [placeholder]=\"placeholder\"\r\n            />\r\n        </div>\r\n    </div>\r\n    <i\r\n        *ngIf=\"inputField.value.length > 0\"\r\n        role=\"button\"\r\n        class=\"bi bi-x delete\"\r\n        (click)=\"inputField.value = ''\"\r\n    ></i>\r\n</div>"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-6b244d059789d16f25784cd9eee95fbd",
            "file": "src/app/pages/app/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [
                "./dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "name",
                    "defaultValue": "'Thibaut'",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "welcomeDisplay",
                    "defaultValue": "true",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "methodsClass": [
                {
                    "name": "createArray",
                    "args": [
                        {
                            "name": "i",
                            "type": "number"
                        }
                    ],
                    "optional": false,
                    "returnType": "Array<any>",
                    "typeParameters": [],
                    "line": 13,
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "number",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent {\r\n\r\n  name = 'Thibaut';\r\n  welcomeDisplay = true;\r\n\r\n  createArray(i: number): Array<any> {\r\n    return new Array(i);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".welcome {\r\n  .close {\r\n    top: 1.5rem;\r\n    right: 1.5rem;\r\n\r\n    &:hover {\r\n      transition: all 0.3s;\r\n      color: black;\r\n      cursor: pointer;\r\n    }\r\n  }\r\n}",
                    "styleUrl": "./dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<app-header class=\"app-header mb-3\">\r\n    <h1 class=\"h5 m-0\">Dashboard</h1>\r\n</app-header>\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-12 col-md-6 mb-3 mb-md-0\">\r\n            <app-base-card\r\n                *ngIf=\"welcomeDisplay\"\r\n                class=\"mb-3 welcome\"\r\n            >\r\n                <p class=\"h2 mb-0\">\r\n                    <span class=\"fs-4 fs-md-7 me-2 me-md-3\">👋</span>Welcome <strong>{{name}}</strong>\r\n                </p>\r\n                <i\r\n                    class=\"position-absolute close\"\r\n                    (click)=\"welcomeDisplay = !welcomeDisplay\"\r\n                    nz-icon\r\n                    nzType=\"close\"\r\n                    nzTheme=\"outline\"\r\n                ></i>\r\n            </app-base-card>\r\n            <app-base-card>\r\n                <h2 class=\"fw-7 fs-4\">Upcoming matches</h2>\r\n                <div class=\"line mb-2 bg-secondary\"></div>\r\n                <div *ngFor=\"let a of createArray(5); let i = index\">\r\n                    <app-skeleton [class]=\"i < 4 ? 'my-3 sk-5' : 'mt-3 sk-5'\" ></app-skeleton>\r\n                    <div *ngIf=\"i < 4\" class=\"line\"></div>\r\n                </div>\r\n            </app-base-card>\r\n        </div>\r\n        <div class=\"col-12 col-md-6\">\r\n            <app-base-card>\r\n                <h2 class=\"fw-7 fs-4\">My Teams</h2>\r\n                <div class=\"line mb-2 bg-secondary\"></div>\r\n                <div *ngFor=\"let a of createArray(5); let i = index\">\r\n                    <app-skeleton [class]=\"i < 4 ? 'my-3 sk-5' : 'mt-3 sk-5'\" ></app-skeleton>\r\n                    <div *ngIf=\"i < 4\" class=\"line\"></div>\r\n                </div>\r\n            </app-base-card>\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "ErrorComponent",
            "id": "component-ErrorComponent-458e93fbd8351015db3ad935f5f3d51f",
            "file": "src/app/pages/error/error.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error",
            "styleUrls": [
                "./error.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./error.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.scss']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./error.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>error works!</p>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-c349aa42f2121da4b5737d60a50fa413",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  template: `<header>\r\n    <div class=\"wrapper\">\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <storybook-button\r\n          *ngIf=\"user\"\r\n          size=\"small\"\r\n          (onClick)=\"onLogout.emit($event)\"\r\n          label=\"Log out\"\r\n        ></storybook-button>\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          size=\"small\"\r\n          (onClick)=\"onLogin.emit($event)\"\r\n          label=\"Log in\"\r\n        ></storybook-button>\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          primary\r\n          size=\"small\"\r\n          (onClick)=\"onCreateAccount.emit($event)\"\r\n          label=\"Sign up\"\r\n        ></storybook-button>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport default class HeaderComponent {\r\n  @Input()\r\n  user: unknown = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\nsvg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nh1 {\r\n  font-weight: 900;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nbutton + button {\r\n  margin-left: 12px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-73bf9ba216204565724a066a7d6d6219-1",
            "file": "src/app/components/app/layout/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent {\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: block;\r\n}\r\n\r\nnz-header {\r\n  z-index: 2;\r\n}\r\n\r\n.app-header {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 4rem;\r\n  padding: 0;\r\n  background: #fff;\r\n  box-shadow: 0 1px 4px rgba(0,21,41,.08);\r\n}\r\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "HeaderComponent-1",
            "templateData": "<nz-header class=\"w-100 p-0\">\r\n    <div class=\"app-header px-4\">\r\n       <ng-content></ng-content>\r\n    </div>\r\n</nz-header>"
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-56fc62082e04324f0ca02348d9343623",
            "file": "src/app/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>Home</p>"
        },
        {
            "name": "LanguageSelectorComponent",
            "id": "component-LanguageSelectorComponent-bd59893a28ec270f7863b6621a091b2d",
            "file": "src/app/components/shared/forms/select/language-selector/language-selector.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-shared-language-selector",
            "styleUrls": [
                "./language-selector.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./language-selector.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "selectedLanguage",
                    "defaultValue": "'GB-UKM'",
                    "line": 10
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "languages",
                    "defaultValue": "languages",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "changeLanguage",
                    "args": [
                        {
                            "name": "value",
                            "type": "any"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, } from '@angular/core';\r\nimport { languages } from 'src/app/constants/languages.enum';\r\n\r\n@Component({\r\n  selector: 'app-shared-language-selector',\r\n  templateUrl: './language-selector.component.html',\r\n  styleUrls: ['./language-selector.component.scss']\r\n})\r\nexport class LanguageSelectorComponent {\r\n  @Input() selectedLanguage = 'GB-UKM';\r\n\r\n  languages = languages;\r\n\r\n  changeLanguage(value: any): void {\r\n    // console.log(value);\r\n    console.log('test');\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./language-selector.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"nav-link py-0\">\r\n    <nz-select\r\n        class=\"py-1 px-2\"\r\n        [nzBorderless]=\"true\"\r\n        (ngModel)=\"selectedLanguage\"\r\n        (ngModelChange)=\"changeLanguage($event)\"\r\n        [nzCustomTemplate]=\"languageTemplate\"\r\n        [nzNotFoundContent]=\"languageTemplate\"\r\n        [nzPlaceHolder]=\"languageTemplate\"\r\n        nzSize=\"large\"\r\n    >\r\n        <nz-option nzValue=\"GB-UKM\" [nzCustomContent]=\"true\" >\r\n            english\r\n            <!-- <lib-angular-flagpack\r\n                code=\"GB-UKM\"\r\n                size=\"m\"\r\n                gradient=\"top-down\"\r\n                [hasDropShadow]=\"true\"\r\n                [hasBorder]=\"false\"\r\n                [hasBorderRadius]=\"true\"\r\n            >\r\n            </lib-angular-flagpack> -->\r\n        </nz-option>\r\n        <nz-option nzValue=\"nl\" [nzCustomContent]=\"true\" >\r\n            dutch\r\n            <!-- <lib-angular-flagpack\r\n                code=\"nl\"\r\n                size=\"m\"\r\n                gradient=\"top-down\"\r\n                [hasDropShadow]=\"true\"\r\n                [hasBorder]=\"false\"\r\n                [hasBorderRadius]=\"true\"\r\n            >\r\n            </lib-angular-flagpack> -->\r\n        </nz-option>\r\n        <nz-option nzValue=\"fr\" [nzCustomContent]=\"true\" >\r\n            french\r\n            <!-- <lib-angular-flagpack\r\n                code=\"fr\"\r\n                size=\"m\"\r\n                gradient=\"top-down\"\r\n                [hasDropShadow]=\"true\"\r\n                [hasBorder]=\"false\"\r\n                [hasBorderRadius]=\"true\"\r\n            >\r\n            </lib-angular-flagpack> -->\r\n        </nz-option>\r\n        <nz-option nzValue=\"de\" [nzCustomContent]=\"true\" >\r\n            deutsch\r\n            <!-- <lib-angular-flagpack\r\n                code=\"de\"\r\n                size=\"m\"\r\n                gradient=\"top-down\"\r\n                [hasDropShadow]=\"true\"\r\n                [hasBorder]=\"false\"\r\n                [hasBorderRadius]=\"true\"\r\n            >\r\n            </lib-angular-flagpack> -->\r\n        </nz-option>\r\n    </nz-select>\r\n    <ng-template #languageTemplate let-selected>\r\n        lala\r\n        <!-- <lib-angular-flagpack\r\n            [code]=\"selectedLanguage\"\r\n            size=\"m\"\r\n            gradient=\"top-down\"\r\n            [hasDropShadow]=\"true\"\r\n            [hasBorder]=\"false\"\r\n            [hasBorderRadius]=\"true\"\r\n        >\r\n        </lib-angular-flagpack> -->\r\n    </ng-template>\r\n</div>"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-3398de5cf14eff7fd6f5194df2206025",
            "file": "src/app/pages/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "email",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "error",
                    "defaultValue": "null",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "password",
                    "defaultValue": "''",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "passwordVisible",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "response",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "submit",
                    "args": [],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 27
                },
                {
                    "name": "validation",
                    "args": [],
                    "optional": false,
                    "returnType": "string | null",
                    "typeParameters": [],
                    "line": 54
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { apiRoutes, API_BASE_URL } from 'src/app/constants/api.enum';\r\nimport { Observable } from 'rxjs';\r\n\r\n\r\nexport interface LoginData {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent {\r\n\r\n  error: string | null = null;\r\n  email = '';\r\n  password = '';\r\n  passwordVisible = false;\r\n  response: any;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  submit(): string | null {\r\n    this.error = this.validation();\r\n\r\n    if(typeof this.error === 'string') {\r\n      return null;\r\n    }\r\n\r\n    // const headers = new HttpHeaders().set('Authorization', 'auth-token');\r\n    const data: LoginData = {\r\n      email: this.email,\r\n      password: this.password\r\n    };\r\n\r\n    // const promise = this.http.post(API_BASE_URL + apiRoutes['sanctum-crsf'], data).toPromise();\r\n    // promise.then((data) => {\r\n    //   console.log(data);\r\n    // }).catch((err) => console.error(err));\r\n    // console.log(this.response);\r\n\r\n    const promise = this.http.post(API_BASE_URL + apiRoutes.login, data).toPromise();\r\n    promise.then((data) => {\r\n      console.log(data);\r\n    }).catch((err) => console.error(err));\r\n    console.log(this.response);\r\n    return '';\r\n  }\r\n\r\n  validation(): string | null {\r\n    if (!this.email.includes('@') || !this.email.includes('.')) { // Check email\r\n      return 'Email is not valid';\r\n    }\r\n\r\n    if (this.email.length <= 4) { // Check password\r\n      return 'Email requires minimal 6 characters';\r\n    }\r\n\r\n    if (this.password.length <= 6) { // Check password\r\n      return 'Password requires minimal 6 characters';\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".login-form {\r\n  max-width: 300px;\r\n}\r\n\r\n.login-form-margin {\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.login-form-forgot {\r\n  float: right;\r\n}\r\n\r\n.login-form-button {\r\n  width: 100%;\r\n}",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient"
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"container-fluid gr-auth-page\">\r\n    <div class=\"row align-items-center justify-content-center\">\r\n        <div class=\"col-12 col-md-4 my-8 py-5 px-6 bg-white br-5\">\r\n            <form>\r\n                <h1 class=\"mb-4 fw-7\">Login</h1>\r\n                <app-custom-input\r\n                    class=\"mb-3\"\r\n                    (changeValueEvent)=\"email = $event\"\r\n                    icon=\"mail\"\r\n                    inputType=\"email\"\r\n                    placeholder=\"email\"\r\n                    subtitle=\"email\"\r\n                    name=\"email\"\r\n                ></app-custom-input>\r\n                <app-custom-input\r\n                    class=\"mb-3\"\r\n                    (iconClickEvent)=\"passwordVisible = !passwordVisible\"\r\n                    [icon]=\"passwordVisible ? 'eye-invisible' : 'eye'\"\r\n                    [inputType]=\"passwordVisible ? 'text' : 'password'\"\r\n                    (changeValueEvent)=\"password = $event\"\r\n                    name=\"password\"\r\n                    placeholder=\"password\"\r\n                    subtitle=\"password\"\r\n                ></app-custom-input>\r\n                <small class=\"text-red\">{{ error }}</small>\r\n                <button\r\n                    class=\"btn bg-purple text-white mt-3 py-3 w-100 br-3\"\r\n                    role=\"button\"\r\n                    (click)=\"submit()\"\r\n                >\r\n                    Login\r\n                </button>\r\n            </form>\r\n            <!-- <form\r\n                nz-form\r\n                [formGroup]=\"validateForm\"\r\n                class=\"login-form\"\r\n                (ngSubmit)=\"submitForm()\"\r\n            >\r\n                <nz-form-item>\r\n                    <nz-form-control nzErrorTip=\"Please input your username!\">\r\n                        <nz-input-group nzPrefixIcon=\"user\">\r\n                            <input type=\"text\" nz-input formControlName=\"userName\" placeholder=\"Username\" />\r\n                        </nz-input-group>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n                <nz-form-item>\r\n                    <nz-form-control nzErrorTip=\"Please input your Password!\">\r\n                        <nz-input-group nzPrefixIcon=\"lock\">\r\n                            <input type=\"password\" nz-input formControlName=\"password\" placeholder=\"Password\" />\r\n                        </nz-input-group>\r\n                    </nz-form-control>\r\n                </nz-form-item>\r\n                <div nz-row class=\"login-form-margin\">\r\n                    <div nz-col [nzSpan]=\"12\">\r\n                        <label nz-checkbox formControlName=\"remember\">\r\n                            <span>Remember me</span>\r\n                        </label>\r\n                    </div>\r\n                    <div nz-col [nzSpan]=\"12\">\r\n                        <a class=\"login-form-forgot\">Forgot password</a>\r\n                    </div>\r\n                </div>\r\n                <button\r\n                    nz-button\r\n                    class=\"login-form-button login-form-margin\"\r\n                    [nzType]=\"'primary'\"\r\n                >\r\n                    Log in\r\n                </button>\r\n                Or <a> register now! </a>\r\n            </form> -->\r\n        </div>\r\n    </div>\r\n</div>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-ba5ca081e565184c4d3af7b43a1d2d85",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 65,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  template: `<article>\r\n    <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"onLogout.emit($event)\"\r\n      (onLogin)=\"onLogin.emit($event)\"\r\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\r\n    ></storybook-header>\r\n    <section>\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page states without\r\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\r\n        in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose such data from the\r\n          \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock these services out\r\n          using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Storybook tutorials\r\n        </a>\r\n        . Read more in the\r\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n  styleUrls: ['./page.css'],\r\n})\r\n\r\nexport default class PageComponent {\r\n  @Input()\r\n  user: unknown = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n\r\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\r\n//   <article>\r\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\r\n\r\n// );\r\n// Page.propTypes = {\r\n//   user: PropTypes.shape({}),\r\n//   onLogin: PropTypes.func.isRequired,\r\n//   onLogout: PropTypes.func.isRequired,\r\n//   onCreateAccount: PropTypes.func.isRequired,\r\n// };\r\n\r\n// Page.defaultProps = {\r\n//   user: null,\r\n// };\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding: 48px 20px;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  color: #333;\r\n}\r\n\r\nh2 {\r\n  font-weight: 900;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n  margin: 0 0 4px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\np {\r\n  margin: 1em 0;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: #1ea7fd;\r\n}\r\n\r\nul {\r\n  padding-left: 30px;\r\n  margin: 1em 0;\r\n}\r\n\r\nli {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.tip {\r\n  display: inline-block;\r\n  border-radius: 1em;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n  font-weight: 700;\r\n  background: #e7fdd8;\r\n  color: #66bf3c;\r\n  padding: 4px 12px;\r\n  margin-right: 10px;\r\n  vertical-align: top;\r\n}\r\n\r\n.tip-wrapper {\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.tip-wrapper svg {\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 4px;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n}\r\n\r\n.tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "RegisterComponent",
            "id": "component-RegisterComponent-e0c359f7260591a56631f9a17477ee12",
            "file": "src/app/pages/register/register.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register",
            "styleUrls": [
                "./register.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./register.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./register.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>register works!</p>\r\n"
        },
        {
            "name": "SideNavComponent",
            "id": "component-SideNavComponent-e71bf40467d8e5d740e0263d41b7908f",
            "file": "src/app/components/app/layout/side-nav/side-nav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-side-nav",
            "styleUrls": [
                "./side-nav.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./side-nav.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "innerWidth",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isCollapsed",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                },
                {
                    "name": "toggleCollapse",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "ev",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 18
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, HostListener, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'app-side-nav',\r\n  templateUrl: './side-nav.component.html',\r\n  styleUrls: ['./side-nav.component.scss']\r\n})\r\nexport class SideNavComponent implements OnInit {\r\n\r\n  public isCollapsed = false;\r\n  public innerWidth: any;\r\n\r\n  ngOnInit(): void {\r\n    this.innerWidth = window.innerWidth;\r\n  }\r\n\r\n  @HostListener('window:resize', ['$event'])onResize(ev: any): void {\r\n    this.innerWidth = window.innerWidth;\r\n  }\r\n\r\n  public toggleCollapse(): void {\r\n    this.isCollapsed = !this.isCollapsed;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: flex;\r\n  text-rendering: optimizeLegibility;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n.menu-sidebar {\r\n  z-index: 10;\r\n  box-shadow: 2px 0 6px rgba(0,21,41,.35);\r\n}\r\n\r\n.ant-menu-submenu:hover {\r\n  background-color: #1890ff;\r\n}\r\n\r\nnz-content {\r\n  background: #fff;\r\n  height: 100%;\r\n}\r\n\r\n.logo {\r\n  &:hover {\r\n    transition: all 0.3s;\r\n    opacity: 0.8;\r\n  }\r\n\r\n  &-mobile {\r\n    transform: scale(1.5);\r\n  }\r\n}",
                    "styleUrl": "./side-nav.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<nz-layout class=\"vh-100\">\r\n    <nz-sider\r\n        class=\"menu-sidebar min-vh-100 position-relative rounded-end\"\r\n        nzCollapsible\r\n        [nzWidth]=\"256\"\r\n        [nzCollapsedWidth]=\"innerWidth > 768 ? 80 : 0\"\r\n        nzBreakpoint=\"md\"\r\n        [(nzCollapsed)]=\"isCollapsed\"\r\n    >\r\n        <div [class]=\"isCollapsed ? 'p-0 m-0 d-flex align-items-center justify-content-center align-middle' : 'px-4 m-2 d-flex align-items-center justify-content-center align-middle' \">\r\n            <h1 [class]=\"!isCollapsed ? 'mb-0' : ''\" >\r\n                <img\r\n                    routerLink=\"/app\"\r\n                    role=\"button\"\r\n                    src=\"/assets/img/logo/logo_white_big.png\"\r\n                    alt=\"logo\"\r\n                    class=\"logo mw-100 mh-100 h-auto w-auto\"\r\n                />\r\n            </h1>\r\n        </div>\r\n        <ul\r\n            class=\"h-100\"\r\n            nz-menu\r\n            nzTheme=\"dark\"\r\n            nzMode=\"inline\"\r\n            [nzInlineCollapsed]=\"isCollapsed\"\r\n        >\r\n            <!-- <li nz-submenu nzOpen nzTitle=\"Dashboard\" nzIcon=\"dashboard\" nzMenuClassName=\"\">\r\n                <ul>\r\n                    <li nz-menu-item nzMatchRouter>\r\n                        <a routerLink=\"/welcome\">Welcome</a>\r\n                    </li>\r\n                    <li nz-menu-item nzMatchRouter>\r\n                        <a>Monitor</a>\r\n                    </li>\r\n                    <li nz-menu-item nzMatchRouter>\r\n                        <a>Workplace</a>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n            <li nz-submenu nzOpen nzTitle=\"Form\" nzIcon=\"form\">\r\n                <ul>\r\n                    <li nz-menu-item nzMatchRouter>\r\n                        <a>Basic Form</a>\r\n                    </li>\r\n                </ul>\r\n            </li> -->\r\n            <li routerLink=\"/app/dashboard\" nzMatchRouter=\"nzSelected\" nz-menu-item nz-tooltip nzTooltipPlacement=\"right\" [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\">\r\n                <i nz-icon nzType=\"pie-chart\" nzTheme=\"outline\"></i>\r\n                <span>Dashboard</span>\r\n            </li>\r\n            <li routerLink=\"/app/teams\" nzMatchRouter=\"nzSelected\" nz-menu-item nz-tooltip nzTooltipPlacement=\"right\" [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\">\r\n                <i nz-icon nzType=\"team\" nzTheme=\"outline\"></i>\r\n                <span>Teams</span>\r\n            </li>\r\n            <li\r\n                routerLink=\"/app/matches\"\r\n                nzMatchRouter=\"nzSelected\"\r\n                nz-menu-item\r\n                nz-tooltip\r\n                nzTooltipPlacement=\"right\"\r\n                [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\"\r\n            >\r\n                <i nz-icon nzType=\"calendar\" nzTheme=\"outline\"></i>\r\n                <span>Matches</span>\r\n            </li>\r\n\r\n            <li\r\n                nz-submenu\r\n                nzTitle=\"Communication\"\r\n                nzIcon=\"comment\"\r\n                nzMenuClassName=\"\"\r\n            >\r\n                <ul>\r\n                    <li\r\n                        routerLink=\"/app/messages\"\r\n                        nzMatchRouter=\"nzSelected\"\r\n                        nz-menu-item nz-tooltip\r\n                        nzTooltipPlacement=\"right\"\r\n                        [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\"\r\n                    >\r\n                        <i nz-icon nzType=\"message\" nzTheme=\"outline\"></i>\r\n                        <span>Messages</span>\r\n                    </li>\r\n                    <li\r\n                        routerLink=\"/app/email\"\r\n                        nzMatchRouter=\"nzSelected\"\r\n                        nz-menu-item\r\n                        nz-tooltip\r\n                        nzTooltipPlacement=\"right\"\r\n                        [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\"\r\n                    >\r\n                        <i nz-icon nzType=\"mail\" nzTheme=\"outline\"></i>\r\n                        <span>Email</span>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n            \r\n            <li\r\n                routerLink=\"/app/birthdays\"\r\n                nzMatchRouter=\"nzSelected\"\r\n                nz-menu-item\r\n                nz-tooltip\r\n                nzTooltipPlacement=\"right\"\r\n                [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\"\r\n            >\r\n                <i nz-icon nzType=\"crown\" nzTheme=\"outline\"></i>\r\n                <span>Birthdays</span>\r\n            </li>\r\n\r\n            <li\r\n                nz-submenu\r\n                nzTitle=\"Info\"\r\n                nzIcon=\"info-circle\"\r\n                nzMenuClassName=\"\"\r\n            >\r\n                <ul>\r\n                    <li\r\n                        routerLink=\"/app/updates\"\r\n                        nzMatchRouter=\"nzSelected\"\r\n                        nz-menu-item\r\n                        nz-tooltip\r\n                        nzTooltipPlacement=\"right\"\r\n                        [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\"\r\n                    >\r\n                        <i nz-icon nzType=\"notification\" nzTheme=\"outline\"></i>\r\n                        <span>Updates</span>\r\n                    </li>\r\n                    <li\r\n                        routerLink=\"/app/tutorials\"\r\n                        nzMatchRouter=\"nzSelected\"\r\n                        nz-menu-item\r\n                        nz-tooltip\r\n                        nzTooltipPlacement=\"right\"\r\n                        [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\"\r\n                    >\r\n                        <i nz-icon nzType=\"bulb\" nzTheme=\"outline\"></i>\r\n                        <span>Tutorials</span>\r\n                    </li>\r\n                </ul>\r\n            </li>  \r\n\r\n            <li\r\n                nz-submenu\r\n                nzTitle=\"Account\"\r\n                nzIcon=\"user\"\r\n                nzMenuClassName=\"\"\r\n            >\r\n                <ul>\r\n                    <li\r\n                        routerLink=\"/app/settings\"\r\n                        nzMatchRouter=\"nzSelected\"\r\n                        nz-menu-item\r\n                        nz-tooltip\r\n                        nzTooltipPlacement=\"right\"\r\n                        [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\"\r\n                    >\r\n                        <i nz-icon nzType=\"setting\" nzTheme=\"outline\"></i>\r\n                        <span>Settings</span>\r\n                    </li>\r\n                    <li\r\n                        routerLink=\"/app/logout\"\r\n                        nzMatchRouter=\"nzSelected\"\r\n                        nz-menu-item\r\n                        nz-tooltip\r\n                        nzTooltipPlacement=\"right\"\r\n                        [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\"\r\n                    >\r\n                        <i nz-icon nzType=\"poweroff\" nzTheme=\"outline\"></i>\r\n                        <span>Logout</span>\r\n                    </li>\r\n                </ul>\r\n            </li>\r\n        </ul>\r\n    </nz-sider>\r\n    <nz-layout>\r\n        <app-header class=\"d-block d-md-none\">\r\n            <div class=\"row\">\r\n                <div class=\"col-4\">\r\n                    <i\r\n                        *ngIf=\"innerWidth <= 768\"\r\n                        class=\"trigger h5 mb-4\"\r\n                        (click)=\"toggleCollapse()\"\r\n                        role=\"button\"\r\n                        nz-icon\r\n                        nzType=\"menu\"\r\n                        nzTheme=\"outline\"\r\n                    ></i>\r\n                </div>\r\n                <h1 class=\"mb-0 col-4\" >\r\n                    <img\r\n                        routerLink=\"/app\"\r\n                        role=\"button\"\r\n                        src=\"/assets/img/logo/logo_light-purple_big.svg\"\r\n                        alt=\"logo\"\r\n                        class=\"logo logo-mobile w-100 h-100\"\r\n                    />\r\n                </h1>\r\n                <div class=\"col-4\"></div>\r\n            </div>\r\n        </app-header>\r\n        <nz-content>\r\n            <ng-content></ng-content>\r\n        </nz-content>\r\n    </nz-layout>\r\n</nz-layout>\r\n"
        },
        {
            "name": "SkeletonComponent",
            "id": "component-SkeletonComponent-cd203ac97812697ab6af7f209fc78a71",
            "file": "src/app/components/app/skeleton/skeleton.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-skeleton",
            "styleUrls": [
                "./skeleton.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./skeleton.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "''",
                    "line": 10
                },
                {
                    "name": "rows",
                    "defaultValue": "1",
                    "line": 11
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-skeleton',\r\n  templateUrl: './skeleton.component.html',\r\n  styleUrls: ['./skeleton.component.scss']\r\n})\r\nexport class SkeletonComponent {\r\n\r\n  @Input() class = '';\r\n  @Input() rows = 1;\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./skeleton.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nz-skeleton\r\n    [class]=\"class\"\r\n    [nzTitle]=\"false\"\r\n    [nzActive]=\"true\"\r\n    [nzParagraph]=\"{ rows: rows, width: '100%' }\"\r\n>\r\n    Loading\r\n</nz-skeleton>"
        },
        {
            "name": "StaticFooterComponent",
            "id": "component-StaticFooterComponent-ab5ea7b122c88aa6e0c80025a69ad9dd",
            "file": "src/app/components/static/static-footer/static-footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-static-footer",
            "styleUrls": [
                "./static-footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./static-footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-static-footer',\r\n  templateUrl: './static-footer.component.html',\r\n  styleUrls: ['./static-footer.component.scss']\r\n})\r\nexport class StaticFooterComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./static-footer.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<footer class=\"text-white bg-title py-5\">\r\n    <div class=\"container\">\r\n\r\n        <section class=\"row mb-3\">\r\n            <div class=\"col-12 col-lg-6 mb-5 mb-lg-0\">\r\n                <h1 class=\"text-white h2 m-0 mt-1\">A modern and safe platform to manage and entertain your club.</h1>\r\n            </div>\r\n            <div class=\"col-12 col-lg-6\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 col-md-4 mb-3 mb-lg-0\">\r\n                        <h2 class=\"text-white\">App</h2>\r\n                        <ul class=\"\">\r\n                            <li class=\"op-8 mb-1\" role=\"button\" routerLink=\"/login\">Login</li>\r\n                            <li class=\"op-8 mb-1\" role=\"button\" routerLink=\"/register\">Get started</li>\r\n                            <li class=\"op-8 mb-1\" role=\"button\" routerLink=\"/features\">Features</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"col-12 col-md-4 mb-3 mb-lg-0\">\r\n                        <h2 class=\"text-white\">About</h2>\r\n                        <ul class=\"\">\r\n                            <li class=\"op-8 mb-1\" role=\"button\" routerLink=\"/privacy-policy\">privacy-policy</li>\r\n                            <li class=\"op-8 mb-1\" role=\"button\" routerLink=\"/terms-of-service\">Terms of service</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"col-12 col-md-4 mb-3 mb-lg-0\">\r\n                        <h2 class=\"text-white\">Help</h2>\r\n                        <ul class=\"\">\r\n                            <li class=\"op-8 mb-1\" role=\"button\" routerLink=\"/faq\">FAQ</li>\r\n                            <li class=\"op-8 mb-1\" role=\"button\" routerLink=\"/contact\">Contact</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n        <section class=\"row\">\r\n            <div class=\"col-12 col-lg-6 mb-3 mb-lg-0\">\r\n                <img routerLink=\"/\" role=\"button\" class=\"op-6\" src=\"/assets/img/logo/batch_2/logo_white_big.png\" alt=\"logo\" />\r\n            </div>\r\n            <p class=\"col-12 col-lg-6 py-2 d-flex align-items-center mb-0\">© 2020 Thibaut De Maerteleire. All rights reserved.</p>\r\n        </section>\r\n    </div>\r\n</footer>"
        },
        {
            "name": "StaticNavigationComponent",
            "id": "component-StaticNavigationComponent-fecf68ce9342a43ec9f9eb90ec27dc7a",
            "file": "src/app/components/static/static-navigation/static-navigation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-static-navigation",
            "styleUrls": [
                "./static-navigation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./static-navigation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-static-navigation',\r\n  templateUrl: './static-navigation.component.html',\r\n  styleUrls: ['./static-navigation.component.scss']\r\n})\r\nexport class StaticNavigationComponent {\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./static-navigation.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <div class=\"container-fluid\">\r\n        <a class=\"navbar-brand\" routerLink=\"/\">\r\n            <h1 class=\"mb-0\" >\r\n                <img\r\n                    role=\"button\"\r\n                    src=\"/assets/img/logo/logo_big.png\"\r\n                    alt=\"logo\"\r\n                    class=\"logo w-12\"\r\n                />\r\n            </h1>\r\n        </a>\r\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLinkActive=\"active fw-7\" routerLink=\"/features\">Features</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLinkActive=\"active fw-7\" routerLink=\"/pricing\">Pricing</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLinkActive=\"active fw-7\" routerLink=\"/about\">About</a>\r\n                </li>\r\n            </ul>\r\n            <ul class=\"navbar-nav mb-2 mb-lg-0\">\r\n                <li>\r\n                    <a class=\"nav-link\" routerLinkActive=\"active fw-7\" routerLink=\"/login\">Login</a>\r\n                </li>\r\n                <li>\r\n                    <a class=\"nav-link\" routerLinkActive=\"active fw-7\" routerLink=\"/register\">Get started</a>\r\n                </li>\r\n                <li>\r\n                    <!-- <app-shared-language-selector></app-shared-language-selector> -->\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</nav>\r\n"
        },
        {
            "name": "TeamsComponent",
            "id": "component-TeamsComponent-168125ec0099ee533b3ee94b1e76cfbb",
            "file": "src/app/pages/app/teams/teams.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-teams",
            "styleUrls": [
                "./teams.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./teams.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-teams',\r\n  templateUrl: './teams.component.html',\r\n  styleUrls: ['./teams.component.scss']\r\n})\r\nexport class TeamsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./teams.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>teams works!</p>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AntdComponentsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppComponentsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "BaseCardComponent"
                        },
                        {
                            "name": "BirthdayCardComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "SideNavComponent"
                        },
                        {
                            "name": "SkeletonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconsProviderModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "BaseCardComponent"
                        },
                        {
                            "name": "BirthdayCardComponent"
                        },
                        {
                            "name": "SideNavComponent"
                        },
                        {
                            "name": "SkeletonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconsProviderModule"
                        },
                        {
                            "name": "PagesModule"
                        },
                        {
                            "name": "StaticRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppPagesModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppLayoutComponent"
                        },
                        {
                            "name": "DashboardComponent"
                        },
                        {
                            "name": "TeamsComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppLayoutComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ComponentsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IconsProviderModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PagesModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ErrorComponent"
                        },
                        {
                            "name": "HomeComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "RegisterComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppPagesModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedComponentsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "CustomInputComponent"
                        },
                        {
                            "name": "LanguageSelectorComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "CustomInputComponent"
                        },
                        {
                            "name": "LanguageSelectorComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "StaticComponentsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "StaticFooterComponent"
                        },
                        {
                            "name": "StaticNavigationComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "StaticFooterComponent"
                        },
                        {
                            "name": "StaticNavigationComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "StaticRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "_navigationReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/states/app/navigation/navigation.reducer.ts",
                "type": "",
                "defaultValue": "createReducer(\r\n  initialState,\r\n  on(toggleCollapse, (state: boolean) => !state),\r\n)"
            },
            {
                "name": "API_BASE_URL",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/constants/api.enum.ts",
                "type": "string",
                "defaultValue": "'http://api.footy.thibautdemaerteleire.be/api'"
            },
            {
                "name": "appInit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/i18n.provider.ts",
                "type": "",
                "defaultValue": "(i18next: ITranslationService) => {\r\n  return () => i18next.init({\r\n      whitelist: ['en', 'nl', 'fr', 'de'],\r\n      fallbackLng: 'en',\r\n      debug: true,\r\n      returnEmptyString: false,\r\n      resources: {\r\n        nl: {\r\n        }\r\n      },\r\n      ns: [\r\n        'translation',\r\n        'validation',\r\n        'error'\r\n      ],\r\n    });\r\n}"
            },
            {
                "name": "BaseCard",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/app/cards/base-card/base-card.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "scully.client.config.ts",
                "type": "ScullyConfig",
                "defaultValue": "{\r\n  projectRoot: \"./src\",\r\n  projectName: \"Footy_minifootball_app\",\r\n  outDir: './build/client/static',\r\n  routes: {\r\n  }\r\n}"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "I18N_PROVIDERS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/i18n.provider.ts",
                "type": "[]",
                "defaultValue": "[\r\n// {\r\n//   provide: APP_INITIALIZER,\r\n//   useFactory: appInit,\r\n//   deps: [I18NEXT_SERVICE],\r\n//   multi: true\r\n// },\r\n// {\r\n//   provide: LOCALE_ID,\r\n//   deps: [I18NEXT_SERVICE],\r\n//   useFactory: localeIdFactory\r\n// }\r\n]"
            },
            {
                "name": "icons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/icons-provider.module.ts",
                "type": "[]",
                "defaultValue": "[\r\n  ArrowDownOutline,\r\n  ArrowLeftOutline,\r\n  ArrowUpOutline,\r\n  ArrowRightOutline,\r\n  BulbOutline,\r\n  CalendarOutline,\r\n  CloseOutline,\r\n  CommentOutline,\r\n  CrownOutline,\r\n  DashboardOutline,\r\n  DeleteOutline,\r\n  EuroCircleOutline,\r\n  FireOutline,\r\n  FormOutline,\r\n  HeartOutline,\r\n  HomeOutline,\r\n  InfoCircleOutline,\r\n  LeftOutline,\r\n  MailOutline,\r\n  MenuFoldOutline,\r\n  MenuOutline,\r\n  MenuUnfoldOutline,\r\n  MessageOutline,\r\n  NotificationOutline,\r\n  PieChartOutline,\r\n  PoweroffOutline,\r\n  RightOutline,\r\n  SaveOutline,\r\n  SearchOutline,\r\n  SendOutline,\r\n  SettingOutline,\r\n  SyncOutline,\r\n  TeamOutline,\r\n  UserAddOutline,\r\n  UserDeleteOutline,\r\n  UsergroupAddOutline,\r\n  UserOutline,\r\n]"
            },
            {
                "name": "initialState",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/states/app/navigation/navigation.reducer.ts",
                "type": "",
                "defaultValue": "false"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "localeIdFactory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/i18n.provider.ts",
                "type": "",
                "defaultValue": "(i18next: ITranslationService) => {\r\n  return i18next.language;\r\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "myFunctionPlugin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "scully/plugins/plugin.ts",
                "type": "",
                "defaultValue": "async (html: string): Promise<string> => {\r\n  return html;\r\n}"
            },
            {
                "name": "myPlugin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "scully/plugins/plugin.ts",
                "type": "string",
                "defaultValue": "'myPlugin'"
            },
            {
                "name": "navigationReducer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/states/app/navigation/navigation.reducer.ts",
                "type": "",
                "defaultValue": "(state: boolean, action: any): any => {\r\n  return _navigationReducer(state, action);\r\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SideNav",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/app/layout/side-nav/side-nav.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/app/cards/base-card/base-card.stories.ts",
                "type": "Story<BaseCardComponent>",
                "defaultValue": "(args: BaseCardComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/app/layout/side-nav/side-nav.stories.ts",
                "type": "Story<SideNavComponent>",
                "defaultValue": "(args: SideNavComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "toggleCollapse",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/states/app/navigation/navigation.actions.ts",
                "type": "",
                "defaultValue": "createAction('toggle collapse')"
            },
            {
                "name": "validator",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "scully/plugins/plugin.ts",
                "type": "",
                "defaultValue": "async () => []"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "apiRoutes",
                "childs": [
                    {
                        "name": "login",
                        "value": "/login"
                    },
                    {
                        "name": "register",
                        "value": "/forgot-password"
                    },
                    {
                        "name": "change-password",
                        "value": "/change-password"
                    },
                    {
                        "name": "sanctum-crsf",
                        "value": "/csrf-cookie"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/constants/api.enum.ts"
            },
            {
                "name": "appRoutesEnum",
                "childs": [
                    {
                        "name": "dashboard",
                        "value": "dashboard"
                    },
                    {
                        "name": "teams",
                        "value": "teams"
                    },
                    {
                        "name": "team_info",
                        "value": "teams/:id/info"
                    },
                    {
                        "name": "team_specific",
                        "value": "team/:id/overview"
                    },
                    {
                        "name": "matches",
                        "value": "matches"
                    },
                    {
                        "name": "messages",
                        "value": "messages"
                    },
                    {
                        "name": "birthdays",
                        "value": "birthdays"
                    },
                    {
                        "name": "updates",
                        "value": "updates"
                    },
                    {
                        "name": "tutorials",
                        "value": "tutorials"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/constants/routes.enum.ts"
            },
            {
                "name": "baseRoutesEnum",
                "childs": [
                    {
                        "name": "landing",
                        "value": ""
                    },
                    {
                        "name": "home",
                        "value": "home"
                    },
                    {
                        "name": "features",
                        "value": "features"
                    },
                    {
                        "name": "pricing",
                        "value": "pricing"
                    },
                    {
                        "name": "about",
                        "value": "about"
                    },
                    {
                        "name": "contact",
                        "value": "contact"
                    },
                    {
                        "name": "faq",
                        "value": "faq"
                    },
                    {
                        "name": "privacy_policy",
                        "value": "privacy-policy"
                    },
                    {
                        "name": "terms_of_service",
                        "value": "terms-of-service"
                    },
                    {
                        "name": "login",
                        "value": "login"
                    },
                    {
                        "name": "register",
                        "value": "register"
                    },
                    {
                        "name": "forgotPassword",
                        "value": "forgot-password"
                    },
                    {
                        "name": "app",
                        "value": "app"
                    },
                    {
                        "name": "error",
                        "value": "error/:id"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/constants/routes.enum.ts"
            },
            {
                "name": "languages",
                "childs": [
                    {
                        "name": "en",
                        "value": "GB-UKM"
                    },
                    {
                        "name": "nl",
                        "value": "nl"
                    },
                    {
                        "name": "fr",
                        "value": "fr"
                    },
                    {
                        "name": "de",
                        "value": "de"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/constants/languages.enum.ts"
            }
        ],
        "groupedVariables": {
            "src/app/states/app/navigation/navigation.reducer.ts": [
                {
                    "name": "_navigationReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/states/app/navigation/navigation.reducer.ts",
                    "type": "",
                    "defaultValue": "createReducer(\r\n  initialState,\r\n  on(toggleCollapse, (state: boolean) => !state),\r\n)"
                },
                {
                    "name": "initialState",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/states/app/navigation/navigation.reducer.ts",
                    "type": "",
                    "defaultValue": "false"
                },
                {
                    "name": "navigationReducer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/states/app/navigation/navigation.reducer.ts",
                    "type": "",
                    "defaultValue": "(state: boolean, action: any): any => {\r\n  return _navigationReducer(state, action);\r\n}"
                }
            ],
            "src/app/constants/api.enum.ts": [
                {
                    "name": "API_BASE_URL",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/constants/api.enum.ts",
                    "type": "string",
                    "defaultValue": "'http://api.footy.thibautdemaerteleire.be/api'"
                }
            ],
            "src/app/i18n.provider.ts": [
                {
                    "name": "appInit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/i18n.provider.ts",
                    "type": "",
                    "defaultValue": "(i18next: ITranslationService) => {\r\n  return () => i18next.init({\r\n      whitelist: ['en', 'nl', 'fr', 'de'],\r\n      fallbackLng: 'en',\r\n      debug: true,\r\n      returnEmptyString: false,\r\n      resources: {\r\n        nl: {\r\n        }\r\n      },\r\n      ns: [\r\n        'translation',\r\n        'validation',\r\n        'error'\r\n      ],\r\n    });\r\n}"
                },
                {
                    "name": "I18N_PROVIDERS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/i18n.provider.ts",
                    "type": "[]",
                    "defaultValue": "[\r\n// {\r\n//   provide: APP_INITIALIZER,\r\n//   useFactory: appInit,\r\n//   deps: [I18NEXT_SERVICE],\r\n//   multi: true\r\n// },\r\n// {\r\n//   provide: LOCALE_ID,\r\n//   deps: [I18NEXT_SERVICE],\r\n//   useFactory: localeIdFactory\r\n// }\r\n]"
                },
                {
                    "name": "localeIdFactory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/i18n.provider.ts",
                    "type": "",
                    "defaultValue": "(i18next: ITranslationService) => {\r\n  return i18next.language;\r\n}"
                }
            ],
            "src/app/components/app/cards/base-card/base-card.stories.ts": [
                {
                    "name": "BaseCard",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/app/cards/base-card/base-card.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/app/cards/base-card/base-card.stories.ts",
                    "type": "Story<BaseCardComponent>",
                    "defaultValue": "(args: BaseCardComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "scully.client.config.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "scully.client.config.ts",
                    "type": "ScullyConfig",
                    "defaultValue": "{\r\n  projectRoot: \"./src\",\r\n  projectName: \"Footy_minifootball_app\",\r\n  outDir: './build/client/static',\r\n  routes: {\r\n  }\r\n}"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "src/app/icons-provider.module.ts": [
                {
                    "name": "icons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/icons-provider.module.ts",
                    "type": "[]",
                    "defaultValue": "[\r\n  ArrowDownOutline,\r\n  ArrowLeftOutline,\r\n  ArrowUpOutline,\r\n  ArrowRightOutline,\r\n  BulbOutline,\r\n  CalendarOutline,\r\n  CloseOutline,\r\n  CommentOutline,\r\n  CrownOutline,\r\n  DashboardOutline,\r\n  DeleteOutline,\r\n  EuroCircleOutline,\r\n  FireOutline,\r\n  FormOutline,\r\n  HeartOutline,\r\n  HomeOutline,\r\n  InfoCircleOutline,\r\n  LeftOutline,\r\n  MailOutline,\r\n  MenuFoldOutline,\r\n  MenuOutline,\r\n  MenuUnfoldOutline,\r\n  MessageOutline,\r\n  NotificationOutline,\r\n  PieChartOutline,\r\n  PoweroffOutline,\r\n  RightOutline,\r\n  SaveOutline,\r\n  SearchOutline,\r\n  SendOutline,\r\n  SettingOutline,\r\n  SyncOutline,\r\n  TeamOutline,\r\n  UserAddOutline,\r\n  UserDeleteOutline,\r\n  UsergroupAddOutline,\r\n  UserOutline,\r\n]"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
                }
            ],
            "scully/plugins/plugin.ts": [
                {
                    "name": "myFunctionPlugin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "scully/plugins/plugin.ts",
                    "type": "",
                    "defaultValue": "async (html: string): Promise<string> => {\r\n  return html;\r\n}"
                },
                {
                    "name": "myPlugin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "scully/plugins/plugin.ts",
                    "type": "string",
                    "defaultValue": "'myPlugin'"
                },
                {
                    "name": "validator",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "scully/plugins/plugin.ts",
                    "type": "",
                    "defaultValue": "async () => []"
                }
            ],
            "src/app/components/app/layout/side-nav/side-nav.stories.ts": [
                {
                    "name": "SideNav",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/app/layout/side-nav/side-nav.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/app/layout/side-nav/side-nav.stories.ts",
                    "type": "Story<SideNavComponent>",
                    "defaultValue": "(args: SideNavComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/app/states/app/navigation/navigation.actions.ts": [
                {
                    "name": "toggleCollapse",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/states/app/navigation/navigation.actions.ts",
                    "type": "",
                    "defaultValue": "createAction('toggle collapse')"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/constants/api.enum.ts": [
                {
                    "name": "apiRoutes",
                    "childs": [
                        {
                            "name": "login",
                            "value": "/login"
                        },
                        {
                            "name": "register",
                            "value": "/forgot-password"
                        },
                        {
                            "name": "change-password",
                            "value": "/change-password"
                        },
                        {
                            "name": "sanctum-crsf",
                            "value": "/csrf-cookie"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/constants/api.enum.ts"
                }
            ],
            "src/app/constants/routes.enum.ts": [
                {
                    "name": "appRoutesEnum",
                    "childs": [
                        {
                            "name": "dashboard",
                            "value": "dashboard"
                        },
                        {
                            "name": "teams",
                            "value": "teams"
                        },
                        {
                            "name": "team_info",
                            "value": "teams/:id/info"
                        },
                        {
                            "name": "team_specific",
                            "value": "team/:id/overview"
                        },
                        {
                            "name": "matches",
                            "value": "matches"
                        },
                        {
                            "name": "messages",
                            "value": "messages"
                        },
                        {
                            "name": "birthdays",
                            "value": "birthdays"
                        },
                        {
                            "name": "updates",
                            "value": "updates"
                        },
                        {
                            "name": "tutorials",
                            "value": "tutorials"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/constants/routes.enum.ts"
                },
                {
                    "name": "baseRoutesEnum",
                    "childs": [
                        {
                            "name": "landing",
                            "value": ""
                        },
                        {
                            "name": "home",
                            "value": "home"
                        },
                        {
                            "name": "features",
                            "value": "features"
                        },
                        {
                            "name": "pricing",
                            "value": "pricing"
                        },
                        {
                            "name": "about",
                            "value": "about"
                        },
                        {
                            "name": "contact",
                            "value": "contact"
                        },
                        {
                            "name": "faq",
                            "value": "faq"
                        },
                        {
                            "name": "privacy_policy",
                            "value": "privacy-policy"
                        },
                        {
                            "name": "terms_of_service",
                            "value": "terms-of-service"
                        },
                        {
                            "name": "login",
                            "value": "login"
                        },
                        {
                            "name": "register",
                            "value": "register"
                        },
                        {
                            "name": "forgotPassword",
                            "value": "forgot-password"
                        },
                        {
                            "name": "app",
                            "value": "app"
                        },
                        {
                            "name": "error",
                            "value": "error/:id"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/constants/routes.enum.ts"
                }
            ],
            "src/app/constants/languages.enum.ts": [
                {
                    "name": "languages",
                    "childs": [
                        {
                            "name": "en",
                            "value": "GB-UKM"
                        },
                        {
                            "name": "nl",
                            "value": "nl"
                        },
                        {
                            "name": "fr",
                            "value": "fr"
                        },
                        {
                            "name": "de",
                            "value": "de"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/constants/languages.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "BaseRoutes",
                "filename": "src/app/routes/base-routes.ts",
                "module": "StaticRoutingModule",
                "children": [
                    {
                        "path": "home",
                        "redirectTo": ""
                    },
                    {
                        "path": "",
                        "component": "HomeComponent"
                    },
                    {
                        "path": "login",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "register",
                        "component": "RegisterComponent"
                    },
                    {
                        "path": "app",
                        "component": "AppLayoutComponent",
                        "children": "AppRoutes"
                    },
                    {
                        "path": "error/:id",
                        "component": "ErrorComponent"
                    },
                    {
                        "path": "**",
                        "redirectTo": "/error/404"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "scully.client.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "scully/plugins/plugin.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "myFunctionPlugin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "scully/plugins/plugin.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "myPlugin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "scully/plugins/plugin.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "validator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/app/cards/base-card/base-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BaseCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/app/cards/base-card/base-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BaseCard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/app/cards/base-card/base-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/app/cards/birthday-card/birthday-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BirthdayCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/app/layout/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/app/layout/side-nav/side-nav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideNavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/app/layout/side-nav/side-nav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SideNav",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/app/layout/side-nav/side-nav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/app/skeleton/skeleton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SkeletonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/forms/input/custom-input/custom-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CustomInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/forms/select/language-selector/language-selector.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LanguageSelectorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/static/static-footer/static-footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StaticFooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/static/static-navigation/static-navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StaticNavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/constants/api.enum.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "API_BASE_URL",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/i18n.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appInit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/i18n.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "I18N_PROVIDERS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/i18n.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "localeIdFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/icons-provider.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "icons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/app/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/app/layout/app-layout.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppLayoutComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/app/teams/teams.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/error/error.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/login/login.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "LoginData",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/register/register.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/states/app/navigation/navigation.actions.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "toggleCollapse",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/states/app/navigation/navigation.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "_navigationReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/states/app/navigation/navigation.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "initialState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/states/app/navigation/navigation.reducer.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "navigationReducer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}