{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-e3ea1f4631d62652a5623d3ab757b2fc",
            "file": "e2e/src/app.po.ts",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\r\n\r\nexport class AppPage {\r\n  async navigateTo(): Promise<unknown> {\r\n    return browser.get(browser.baseUrl);\r\n  }\r\n\r\n  async getTitleText(): Promise<string> {\r\n    return element(by.css('app-root .content span')).getText();\r\n  }\r\n}\r\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 8,
                    "modifierKind": [
                        120
                    ]
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "Promise<unknown>",
                    "typeParameters": [],
                    "line": 4,
                    "modifierKind": [
                        120
                    ]
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-f2fd0aa0ecf7573450f8e920e77c7f6d",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent { }\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "templateData": "<router-outlet></router-outlet>\r\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-44f2f1e1b3a1e0ebc1e0edafd90d05c0",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "description": "<p>Button contents</p>\n",
                    "line": 40
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport default class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "CardBaseComponent",
            "id": "component-CardBaseComponent-6ca6793ee056a58976bf76c5936dea1c",
            "file": "src/app/components/shared/card/card-base/card-base.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-card-base",
            "styleUrls": [
                "./card-base.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card-base.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-card-base',\n  templateUrl: './card-base.component.html',\n  styleUrls: ['./card-base.component.scss']\n})\nexport class CardBaseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./card-base.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>card-base works!</p>\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-12a4b92ff8e004468d861a45306e4f3d",
            "file": "src/app/pages/app/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [
                "./dashboard.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dashboard.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>dashboard works!</p>\r\n"
        },
        {
            "name": "ErrorComponent",
            "id": "component-ErrorComponent-458e93fbd8351015db3ad935f5f3d51f",
            "file": "src/app/pages/error/error.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-error",
            "styleUrls": [
                "./error.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./error.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.scss']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./error.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>error works!</p>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-c349aa42f2121da4b5737d60a50fa413",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 53,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-header',\r\n  template: `<header>\r\n    <div class=\"wrapper\">\r\n      <div>\r\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\r\n              fill=\"#FFF\"\r\n            />\r\n            <path\r\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\r\n              fill=\"#555AB9\"\r\n            />\r\n            <path\r\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\r\n              fill=\"#91BAF8\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        <h1>Acme</h1>\r\n      </div>\r\n      <div>\r\n        <storybook-button\r\n          *ngIf=\"user\"\r\n          size=\"small\"\r\n          (onClick)=\"onLogout.emit($event)\"\r\n          label=\"Log out\"\r\n        ></storybook-button>\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          size=\"small\"\r\n          (onClick)=\"onLogin.emit($event)\"\r\n          label=\"Log in\"\r\n        ></storybook-button>\r\n        <storybook-button\r\n          *ngIf=\"!user\"\r\n          primary\r\n          size=\"small\"\r\n          (onClick)=\"onCreateAccount.emit($event)\"\r\n          label=\"Sign up\"\r\n        ></storybook-button>\r\n      </div>\r\n    </div>\r\n  </header>`,\r\n  styleUrls: ['./header.css'],\r\n})\r\nexport default class HeaderComponent {\r\n  @Input()\r\n  user: unknown = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\r\n  padding: 15px 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\nsvg {\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nh1 {\r\n  font-weight: 900;\r\n  font-size: 20px;\r\n  line-height: 1;\r\n  margin: 6px 0 6px 10px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\nbutton + button {\r\n  margin-left: 12px;\r\n}\r\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "HomeComponent",
            "id": "component-HomeComponent-56fc62082e04324f0ca02348d9343623",
            "file": "src/app/pages/home/home.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-home",
            "styleUrls": [
                "./home.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./home.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./home.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>home works!</p>\r\n<!-- <app-side-nav></app-side-nav> -->"
        },
        {
            "name": "InputCurrencyComponent",
            "id": "component-InputCurrencyComponent-d7b3ce3b570d8c910b81481eaa8a22df",
            "file": "src/app/components/shared/form/input-currency/input-currency.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-input-currency",
            "styleUrls": [
                "./input-currency.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./input-currency.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-input-currency',\r\n  templateUrl: './input-currency.component.html',\r\n  styleUrls: ['./input-currency.component.scss']\r\n})\r\nexport class InputCurrencyComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./input-currency.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>input-currency works!</p>\r\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-ba91a32eff3bea4bc859febcd467db3f",
            "file": "src/app/pages/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>login works!</p>\r\n"
        },
        {
            "name": "LogoComponent",
            "id": "component-LogoComponent-5cade1b0abff530829f2cf7364b616c2",
            "file": "src/app/components/shared/images/logo/logo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-logo",
            "styleUrls": [
                "./logo.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./logo.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-logo',\r\n  templateUrl: './logo.component.html',\r\n  styleUrls: ['./logo.component.scss']\r\n})\r\nexport class LogoComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./logo.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>logo works!</p>\r\n"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-ba5ca081e565184c4d3af7b43a1d2d85",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "line": 65,
                    "type": "unknown"
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-page',\r\n  template: `<article>\r\n    <storybook-header\r\n      [user]=\"user\"\r\n      (onLogout)=\"onLogout.emit($event)\"\r\n      (onLogin)=\"onLogin.emit($event)\"\r\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\r\n    ></storybook-header>\r\n    <section>\r\n      <h2>Pages in Storybook</h2>\r\n      <p>\r\n        We recommend building UIs with a\r\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <strong>component-driven</strong>\r\n        </a>\r\n        process starting with atomic components and ending with pages.\r\n      </p>\r\n      <p>\r\n        Render pages with mock data. This makes it easy to build and review page states without\r\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\r\n        in Storybook:\r\n      </p>\r\n      <ul>\r\n        <li>\r\n          Use a higher-level connected component. Storybook helps you compose such data from the\r\n          \"args\" of child component stories\r\n        </li>\r\n        <li>\r\n          Assemble data in the page component from your services. You can mock these services out\r\n          using Storybook.\r\n        </li>\r\n      </ul>\r\n      <p>\r\n        Get a guided tutorial on component-driven development at\r\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          Storybook tutorials\r\n        </a>\r\n        . Read more in the\r\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\r\n        .\r\n      </p>\r\n      <div class=\"tip-wrapper\">\r\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\r\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <g fill=\"none\" fillRule=\"evenodd\">\r\n            <path\r\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\r\n              id=\"a\"\r\n              fill=\"#999\"\r\n            />\r\n          </g>\r\n        </svg>\r\n        Viewports addon in the toolbar\r\n      </div>\r\n    </section>\r\n  </article>`,\r\n  styleUrls: ['./page.css'],\r\n})\r\n\r\nexport default class PageComponent {\r\n  @Input()\r\n  user: unknown = null;\r\n\r\n  @Output()\r\n  onLogin = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onLogout = new EventEmitter<Event>();\r\n\r\n  @Output()\r\n  onCreateAccount = new EventEmitter<Event>();\r\n}\r\n\r\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\r\n//   <article>\r\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\r\n\r\n// );\r\n// Page.propTypes = {\r\n//   user: PropTypes.shape({}),\r\n//   onLogin: PropTypes.func.isRequired,\r\n//   onLogout: PropTypes.func.isRequired,\r\n//   onCreateAccount: PropTypes.func.isRequired,\r\n// };\r\n\r\n// Page.defaultProps = {\r\n//   user: null,\r\n// };\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-size: 14px;\r\n  line-height: 24px;\r\n  padding: 48px 20px;\r\n  margin: 0 auto;\r\n  max-width: 600px;\r\n  color: #333;\r\n}\r\n\r\nh2 {\r\n  font-weight: 900;\r\n  font-size: 32px;\r\n  line-height: 1;\r\n  margin: 0 0 4px;\r\n  display: inline-block;\r\n  vertical-align: top;\r\n}\r\n\r\np {\r\n  margin: 1em 0;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  color: #1ea7fd;\r\n}\r\n\r\nul {\r\n  padding-left: 30px;\r\n  margin: 1em 0;\r\n}\r\n\r\nli {\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.tip {\r\n  display: inline-block;\r\n  border-radius: 1em;\r\n  font-size: 11px;\r\n  line-height: 12px;\r\n  font-weight: 700;\r\n  background: #e7fdd8;\r\n  color: #66bf3c;\r\n  padding: 4px 12px;\r\n  margin-right: 10px;\r\n  vertical-align: top;\r\n}\r\n\r\n.tip-wrapper {\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  margin-top: 40px;\r\n  margin-bottom: 40px;\r\n}\r\n\r\n.tip-wrapper svg {\r\n  display: inline-block;\r\n  height: 12px;\r\n  width: 12px;\r\n  margin-right: 4px;\r\n  vertical-align: top;\r\n  margin-top: 3px;\r\n}\r\n\r\n.tip-wrapper svg path {\r\n  fill: #1ea7fd;\r\n}\r\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "RegisterComponent",
            "id": "component-RegisterComponent-e0c359f7260591a56631f9a17477ee12",
            "file": "src/app/pages/register/register.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-register",
            "styleUrls": [
                "./register.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./register.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./register.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>register works!</p>\r\n"
        },
        {
            "name": "SideNavComponent",
            "id": "component-SideNavComponent-5adec953d52fb2947ab3f3e738a16e67",
            "file": "src/app/components/app/side-nav/side-nav.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-side-nav",
            "styleUrls": [
                "./side-nav.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./side-nav.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "innerWidth",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        114
                    ]
                },
                {
                    "name": "isCollapsed",
                    "defaultValue": "false",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        114
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                },
                {
                    "name": "setIconTrigger",
                    "args": [],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 24
                }
            ],
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "window:resize",
                    "args": [
                        {
                            "name": "ev",
                            "type": "any"
                        }
                    ],
                    "argsDecorator": [
                        "$event"
                    ],
                    "line": 20
                }
            ],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, HostListener, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-side-nav',\n  templateUrl: './side-nav.component.html',\n  styleUrls: ['./side-nav.component.scss']\n})\nexport class SideNavComponent implements OnInit {\n\n  public isCollapsed = false;\n  public innerWidth: any;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.innerWidth = window.innerWidth;\n  }\n\n  @HostListener('window:resize', ['$event'])onResize(ev: any): void {\n    this.innerWidth = window.innerWidth;\n  }\n\n  setIconTrigger(): string {\n    if (innerWidth > 768) {\n      return this.isCollapsed ? 'menu-unfold' : 'menu-fold';\n    } else {\n      return 'menu';\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: flex;\r\n  text-rendering: optimizeLegibility;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n.menu-sidebar {\r\n  z-index: 10;\r\n  box-shadow: 2px 0 6px rgba(0,21,41,.35);\r\n}\r\n\r\n.header-trigger {\r\n  height: 4rem;\r\n  padding: 1.25rem 1.5rem;\r\n  font-size: 1.25rem;\r\n  cursor: pointer;\r\n  transition: all .3s,padding 0s;\r\n}\r\n\r\n.trigger:hover {\r\n  color: #1890ff;\r\n}\r\n\r\nnz-header {\r\n  z-index: 2;\r\n}\r\n\r\n.app-header {\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  height: 4rem;\r\n  padding: 0;\r\n  background: #fff;\r\n  box-shadow: 0 1px 4px rgba(0,21,41,.08);\r\n}\r\n\r\nnz-content {\r\n  margin: 1.5rem;\r\n}\r\n\r\n.inner-content {\r\n  padding: 1.5rem;\r\n  background: #fff;\r\n  height: 100%;\r\n}",
                    "styleUrl": "./side-nav.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<nz-layout class=\"vh-100\">\n    <nz-sider\n        class=\"menu-sidebar min-vh-100 position-relative rounded-end\"\n        nzCollapsible\n        [nzWidth]=\"256\"\n        [nzCollapsedWidth]=\"innerWidth > 768 ? 80 : 0\"\n        nzBreakpoint=\"md\"\n        [(nzCollapsed)]=\"isCollapsed\"\n        [nzTrigger]=\"null\"\n    >\n        <div [class]=\"isCollapsed ? 'p-0 m-0 d-flex align-items-center justify-content-center align-middle' : 'px-4 m-2 d-flex align-items-center justify-content-center align-middle' \">\n            <h1 [class]=\"!isCollapsed ? 'mb-0' : ''\" >\n                <img\n                    src=\"/assets/img/logo/logo_white_big.png\"\n                    alt=\"logo footy\"\n                    class=\"logo mw-100 mh-100 h-auto w-auto\"\n                />\n            </h1>\n        </div>\n        <ul nz-menu nzTheme=\"dark\" nzMode=\"inline\" [nzInlineCollapsed]=\"isCollapsed\">\n            <!-- <li nz-submenu nzOpen nzTitle=\"Dashboard\" nzIcon=\"dashboard\" nzMenuClassName=\"\">\n                <ul>\n                    <li nz-menu-item nzMatchRouter>\n                        <a routerLink=\"/welcome\">Welcome</a>\n                    </li>\n                    <li nz-menu-item nzMatchRouter>\n                        <a>Monitor</a>\n                    </li>\n                    <li nz-menu-item nzMatchRouter>\n                        <a>Workplace</a>\n                    </li>\n                </ul>\n            </li>\n            <li nz-submenu nzOpen nzTitle=\"Form\" nzIcon=\"form\">\n                <ul>\n                    <li nz-menu-item nzMatchRouter>\n                        <a>Basic Form</a>\n                    </li>\n                </ul>\n            </li> -->\n            <li nz-menu-item nz-tooltip nzTooltipPlacement=\"right\" [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\" nzSelected>\n                <i nz-icon nzType=\"pie-chart\" nzTheme=\"outline\"></i>\n                <span>Dashboard</span>\n            </li>\n            <li nz-menu-item nz-tooltip nzTooltipPlacement=\"right\" [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\">\n                <i nz-icon nzType=\"team\" nzTheme=\"outline\"></i>\n                <span>Teams</span>\n            </li>\n            <li nz-menu-item nz-tooltip nzTooltipPlacement=\"right\" [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\">\n                <i nz-icon nzType=\"calendar\" nzTheme=\"outline\"></i>\n                <span>Matches</span>\n            </li>\n\n            <li nz-submenu nzOpen nzTitle=\"Communication\" nzIcon=\"comment\" nzMenuClassName=\"\">\n                <ul>\n                    <li nz-menu-item nz-tooltip nzTooltipPlacement=\"right\" [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\">\n                        <i nz-icon nzType=\"message\" nzTheme=\"outline\"></i>\n                        <span>Messages</span>\n                    </li>\n                    <li nz-menu-item nz-tooltip nzTooltipPlacement=\"right\" [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\">\n                        <i nz-icon nzType=\"mail\" nzTheme=\"outline\"></i>\n                        <span>Email</span>\n                    </li>\n                </ul>\n            </li>\n            \n            <li nz-menu-item nz-tooltip nzTooltipPlacement=\"right\" [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\">\n                <i nz-icon nzType=\"crown\" nzTheme=\"outline\"></i>\n                <span>Birthdays</span>\n            </li>\n\n            <li nz-submenu nzOpen nzTitle=\"Info\" nzIcon=\"info-circle\" nzMenuClassName=\"\">\n                <ul>\n                    <li nz-menu-item nz-tooltip nzTooltipPlacement=\"right\" [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\">\n                        <i nz-icon nzType=\"notification\" nzTheme=\"outline\"></i>\n                        <span>Updates</span>\n                    </li>\n                    <li nz-menu-item nz-tooltip nzTooltipPlacement=\"right\" [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\">\n                        <i nz-icon nzType=\"bulb\" nzTheme=\"outline\"></i>\n                        <span>Tutorials</span>\n                    </li>\n                </ul>\n            </li>  \n\n            <li nz-submenu nzOpen nzTitle=\"Account\" nzIcon=\"user\" nzMenuClassName=\"\">\n                <ul>\n                    <li nz-menu-item nz-tooltip nzTooltipPlacement=\"right\" [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\">\n                        <i nz-icon nzType=\"setting\" nzTheme=\"outline\"></i>\n                        <span>Settings</span>\n                    </li>\n                    <li nz-menu-item nz-tooltip nzTooltipPlacement=\"right\" [attr.nzTooltipTitle]=\"isCollapsed ? 'Navigation One' : ''\">\n                        <i nz-icon nzType=\"poweroff\" nzTheme=\"outline\"></i>\n                        <span>Logout</span>\n                    </li>\n                </ul>\n            </li>\n        </ul>\n    </nz-sider>\n    <nz-layout>\n        <nz-header class=\"w-100 p-0\">\n            <div class=\"app-header px-4\">\n                <i \n                    class=\"trigger h5\"\n                    (click)=\"isCollapsed = !isCollapsed\"\n                    role=\"button\"\n                    nz-icon\n                    [nzType]=\"this.setIconTrigger()\"\n                    nzTheme=\"outline\"\n                ></i>\n            </div>\n        </nz-header>\n        <nz-content>\n            <div class=\"inner-content\">\n\n                <ng-content></ng-content>\n\n            </div>\n        </nz-content>\n    </nz-layout>\n</nz-layout>\n"
        },
        {
            "name": "TeamsComponent",
            "id": "component-TeamsComponent-168125ec0099ee533b3ee94b1e76cfbb",
            "file": "src/app/pages/app/teams/teams.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-teams",
            "styleUrls": [
                "./teams.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./teams.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-teams',\r\n  templateUrl: './teams.component.html',\r\n  styleUrls: ['./teams.component.scss']\r\n})\r\nexport class TeamsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./teams.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>teams works!</p>\r\n"
        },
        {
            "name": "WelcomeComponent",
            "id": "component-WelcomeComponent-db4af437e527cdb40675967ecb64bcec",
            "file": "src/app/pages/welcome/welcome.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-welcome",
            "styleUrls": [
                "./welcome.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./welcome.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./welcome.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": ""
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "IconsProviderModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ComponentsModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "SideNavComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HomeModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HomeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IconsProviderModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "WelcomeModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "WelcomeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "WelcomeRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "WelcomeComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "WelcomeRoutingModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "appInit",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/i18n.provider.ts",
                "type": "",
                "defaultValue": "(i18next: ITranslationService) => {\r\n  return () => i18next.init({\r\n      whitelist: ['en', 'nl', 'fr', 'de'],\r\n      fallbackLng: 'en',\r\n      debug: true,\r\n      returnEmptyString: false,\r\n      resources: {\r\n        nl: {\r\n        }\r\n      },\r\n      ns: [\r\n        'translation',\r\n        'validation',\r\n        'error'\r\n      ],\r\n    });\r\n}"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "scully.client.config.ts",
                "type": "ScullyConfig",
                "defaultValue": "{\r\n  projectRoot: \"./src\",\r\n  projectName: \"Footy_minifootball_app\",\r\n  outDir: './build/client/static',\r\n  routes: {\r\n  }\r\n}"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: true\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "type": "object",
                "defaultValue": "{\r\n  production: false\r\n}"
            },
            {
                "name": "I18N_PROVIDERS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/i18n.provider.ts",
                "type": "[]",
                "defaultValue": "[\r\n// {\r\n//   provide: APP_INITIALIZER,\r\n//   useFactory: appInit,\r\n//   deps: [I18NEXT_SERVICE],\r\n//   multi: true\r\n// },\r\n// {\r\n//   provide: LOCALE_ID,\r\n//   deps: [I18NEXT_SERVICE],\r\n//   useFactory: localeIdFactory\r\n// }\r\n]"
            },
            {
                "name": "icons",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/icons-provider.module.ts",
                "type": "[]",
                "defaultValue": "[\n  ArrowDownOutline,\n  ArrowLeftOutline,\n  ArrowUpOutline,\n  ArrowRightOutline,\n  BulbOutline,\n  CalendarOutline,\n  CommentOutline,\n  CrownOutline,\n  DashboardOutline,\n  DeleteOutline,\n  EuroCircleOutline,\n  FireOutline,\n  FormOutline,\n  HeartOutline,\n  HomeOutline,\n  InfoCircleOutline,\n  MailOutline,\n  MenuFoldOutline,\n  MenuOutline,\n  MenuUnfoldOutline,\n  MessageOutline,\n  NotificationOutline,\n  PieChartOutline,\n  PoweroffOutline,\n  SaveOutline,\n  SearchOutline,\n  SendOutline,\n  SettingOutline,\n  SyncOutline,\n  TeamOutline,\n  UserAddOutline,\n  UserDeleteOutline,\n  UsergroupAddOutline,\n  UserOutline,\n]"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "localeIdFactory",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/i18n.provider.ts",
                "type": "",
                "defaultValue": "(i18next: ITranslationService) => {\r\n  return i18next.language;\r\n}"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "myFunctionPlugin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "scully/plugins/plugin.ts",
                "type": "",
                "defaultValue": "async (html: string): Promise<string> => {\r\n  return html;\r\n}"
            },
            {
                "name": "myPlugin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "scully/plugins/plugin.ts",
                "type": "string",
                "defaultValue": "'myPlugin'"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "type": "literal type"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SideNav",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/app/side-nav/side-nav.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/components/app/side-nav/side-nav.stories.ts",
                "type": "Story<SideNavComponent>",
                "defaultValue": "(args: SideNavComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "validator",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "scully/plugins/plugin.ts",
                "type": "",
                "defaultValue": "async () => []"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "appRoutesEnum",
                "childs": [
                    {
                        "name": "dashboard",
                        "value": "dashboard"
                    },
                    {
                        "name": "teams",
                        "value": "teams"
                    },
                    {
                        "name": "team_info",
                        "value": "teams/:id/info"
                    },
                    {
                        "name": "team_specific",
                        "value": "team/:id/overview"
                    },
                    {
                        "name": "matches",
                        "value": "matches"
                    },
                    {
                        "name": "messages",
                        "value": "messages"
                    },
                    {
                        "name": "birthdays",
                        "value": "birthdays"
                    },
                    {
                        "name": "updates",
                        "value": "updates"
                    },
                    {
                        "name": "tutorials",
                        "value": "tutorials"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/constants/routes.enum.ts"
            },
            {
                "name": "baseRoutesEnum",
                "childs": [
                    {
                        "name": "landing",
                        "value": ""
                    },
                    {
                        "name": "home",
                        "value": "home"
                    },
                    {
                        "name": "features",
                        "value": "features"
                    },
                    {
                        "name": "pricing",
                        "value": "pricing"
                    },
                    {
                        "name": "about",
                        "value": "about"
                    },
                    {
                        "name": "contact",
                        "value": "contact"
                    },
                    {
                        "name": "faq",
                        "value": "faq"
                    },
                    {
                        "name": "privacy_policy",
                        "value": "privacy-policy"
                    },
                    {
                        "name": "terms_of_service",
                        "value": "terms-of-service"
                    },
                    {
                        "name": "login",
                        "value": "login"
                    },
                    {
                        "name": "register",
                        "value": "register"
                    },
                    {
                        "name": "forgotPassword",
                        "value": "forgot-password"
                    },
                    {
                        "name": "app",
                        "value": "app"
                    },
                    {
                        "name": "error",
                        "value": "error/:id"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/constants/routes.enum.ts"
            },
            {
                "name": "languages",
                "childs": [
                    {
                        "name": "en",
                        "value": "en"
                    },
                    {
                        "name": "nl",
                        "value": "nl"
                    },
                    {
                        "name": "fr",
                        "value": "fr"
                    },
                    {
                        "name": "de",
                        "value": "de"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "description": "",
                "file": "src/app/constants/languages.enum.ts"
            }
        ],
        "groupedVariables": {
            "src/app/i18n.provider.ts": [
                {
                    "name": "appInit",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/i18n.provider.ts",
                    "type": "",
                    "defaultValue": "(i18next: ITranslationService) => {\r\n  return () => i18next.init({\r\n      whitelist: ['en', 'nl', 'fr', 'de'],\r\n      fallbackLng: 'en',\r\n      debug: true,\r\n      returnEmptyString: false,\r\n      resources: {\r\n        nl: {\r\n        }\r\n      },\r\n      ns: [\r\n        'translation',\r\n        'validation',\r\n        'error'\r\n      ],\r\n    });\r\n}"
                },
                {
                    "name": "I18N_PROVIDERS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/i18n.provider.ts",
                    "type": "[]",
                    "defaultValue": "[\r\n// {\r\n//   provide: APP_INITIALIZER,\r\n//   useFactory: appInit,\r\n//   deps: [I18NEXT_SERVICE],\r\n//   multi: true\r\n// },\r\n// {\r\n//   provide: LOCALE_ID,\r\n//   deps: [I18NEXT_SERVICE],\r\n//   useFactory: localeIdFactory\r\n// }\r\n]"
                },
                {
                    "name": "localeIdFactory",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/i18n.provider.ts",
                    "type": "",
                    "defaultValue": "(i18next: ITranslationService) => {\r\n  return i18next.language;\r\n}"
                }
            ],
            "scully.client.config.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "scully.client.config.ts",
                    "type": "ScullyConfig",
                    "defaultValue": "{\r\n  projectRoot: \"./src\",\r\n  projectName: \"Footy_minifootball_app\",\r\n  outDir: './build/client/static',\r\n  routes: {\r\n  }\r\n}"
                }
            ],
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false\r\n}"
                }
            ],
            "src/app/icons-provider.module.ts": [
                {
                    "name": "icons",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/icons-provider.module.ts",
                    "type": "[]",
                    "defaultValue": "[\n  ArrowDownOutline,\n  ArrowLeftOutline,\n  ArrowUpOutline,\n  ArrowRightOutline,\n  BulbOutline,\n  CalendarOutline,\n  CommentOutline,\n  CrownOutline,\n  DashboardOutline,\n  DeleteOutline,\n  EuroCircleOutline,\n  FireOutline,\n  FormOutline,\n  HeartOutline,\n  HomeOutline,\n  InfoCircleOutline,\n  MailOutline,\n  MenuFoldOutline,\n  MenuOutline,\n  MenuUnfoldOutline,\n  MessageOutline,\n  NotificationOutline,\n  PieChartOutline,\n  PoweroffOutline,\n  SaveOutline,\n  SearchOutline,\n  SendOutline,\n  SettingOutline,\n  SyncOutline,\n  TeamOutline,\n  UserAddOutline,\n  UserDeleteOutline,\n  UsergroupAddOutline,\n  UserOutline,\n]"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\r\n  props: args,\r\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\r\n  props: args,\r\n})"
                }
            ],
            "scully/plugins/plugin.ts": [
                {
                    "name": "myFunctionPlugin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "scully/plugins/plugin.ts",
                    "type": "",
                    "defaultValue": "async (html: string): Promise<string> => {\r\n  return html;\r\n}"
                },
                {
                    "name": "myPlugin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "scully/plugins/plugin.ts",
                    "type": "string",
                    "defaultValue": "'myPlugin'"
                },
                {
                    "name": "validator",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "scully/plugins/plugin.ts",
                    "type": "",
                    "defaultValue": "async () => []"
                }
            ],
            "src/app/components/app/side-nav/side-nav.stories.ts": [
                {
                    "name": "SideNav",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/app/side-nav/side-nav.stories.ts",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/components/app/side-nav/side-nav.stories.ts",
                    "type": "Story<SideNavComponent>",
                    "defaultValue": "(args: SideNavComponent) => ({\r\n  props: args,\r\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "src/app/constants/routes.enum.ts": [
                {
                    "name": "appRoutesEnum",
                    "childs": [
                        {
                            "name": "dashboard",
                            "value": "dashboard"
                        },
                        {
                            "name": "teams",
                            "value": "teams"
                        },
                        {
                            "name": "team_info",
                            "value": "teams/:id/info"
                        },
                        {
                            "name": "team_specific",
                            "value": "team/:id/overview"
                        },
                        {
                            "name": "matches",
                            "value": "matches"
                        },
                        {
                            "name": "messages",
                            "value": "messages"
                        },
                        {
                            "name": "birthdays",
                            "value": "birthdays"
                        },
                        {
                            "name": "updates",
                            "value": "updates"
                        },
                        {
                            "name": "tutorials",
                            "value": "tutorials"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/constants/routes.enum.ts"
                },
                {
                    "name": "baseRoutesEnum",
                    "childs": [
                        {
                            "name": "landing",
                            "value": ""
                        },
                        {
                            "name": "home",
                            "value": "home"
                        },
                        {
                            "name": "features",
                            "value": "features"
                        },
                        {
                            "name": "pricing",
                            "value": "pricing"
                        },
                        {
                            "name": "about",
                            "value": "about"
                        },
                        {
                            "name": "contact",
                            "value": "contact"
                        },
                        {
                            "name": "faq",
                            "value": "faq"
                        },
                        {
                            "name": "privacy_policy",
                            "value": "privacy-policy"
                        },
                        {
                            "name": "terms_of_service",
                            "value": "terms-of-service"
                        },
                        {
                            "name": "login",
                            "value": "login"
                        },
                        {
                            "name": "register",
                            "value": "register"
                        },
                        {
                            "name": "forgotPassword",
                            "value": "forgot-password"
                        },
                        {
                            "name": "app",
                            "value": "app"
                        },
                        {
                            "name": "error",
                            "value": "error/:id"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/constants/routes.enum.ts"
                }
            ],
            "src/app/constants/languages.enum.ts": [
                {
                    "name": "languages",
                    "childs": [
                        {
                            "name": "en",
                            "value": "en"
                        },
                        {
                            "name": "nl",
                            "value": "nl"
                        },
                        {
                            "name": "fr",
                            "value": "fr"
                        },
                        {
                            "name": "de",
                            "value": "de"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "description": "",
                    "file": "src/app/constants/languages.enum.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "BaseRoutes",
                "filename": "src/app/routes/base-routes.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "home",
                        "redirectTo": ""
                    },
                    {
                        "path": "",
                        "component": "HomeComponent"
                    },
                    {
                        "path": "login",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "register",
                        "component": "RegisterComponent"
                    },
                    {
                        "path": "app",
                        "children": "AppRoutes"
                    },
                    {
                        "path": "error/:id",
                        "component": "ErrorComponent"
                    },
                    {
                        "path": "**",
                        "redirectTo": "/error/404"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 2,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "scully.client.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "scully/plugins/plugin.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "myFunctionPlugin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "scully/plugins/plugin.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "myPlugin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "scully/plugins/plugin.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "validator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/app/side-nav/side-nav.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SideNavComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/components/app/side-nav/side-nav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SideNav",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/app/side-nav/side-nav.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/card/card-base/card-base.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardBaseComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/form/input-currency/input-currency.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "InputCurrencyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/shared/images/logo/logo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LogoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/i18n.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appInit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/i18n.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "I18N_PROVIDERS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/i18n.provider.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "localeIdFactory",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/icons-provider.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "icons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/app/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/app/teams/teams.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TeamsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/error/error.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ErrorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/home/home.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/register/register.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/pages/welcome/welcome.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WelcomeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}